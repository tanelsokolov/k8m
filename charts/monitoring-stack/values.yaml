# Default values for monitoring-stack
nameOverride: ""
fullnameOverride: ""

# Namespace
namespace:
  name: monitoring
  create: true

# Prometheus configuration
prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: v3.5.0
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 9090
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '9090'
  
  resources:
    requests:
      cpu: 200m
      memory: 1000Mi
    limits:
      cpu: 1000m
      memory: 2000Mi
  
  # Prometheus configuration
  config:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

  # Storage configuration
  storage:
    retention: 200h

# Grafana configuration
grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: 12.1.0
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '3000'
  
  # Admin credentials
  adminUser: admin
  adminPassword: admin
  
  # Security settings
  security:
    allowSignUp: false
  
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  
  # Datasources
  datasources:
    prometheus:
      name: prometheus
      type: prometheus
      url: "http://{{ include \"monitoring-stack.prometheus.fullname\" . }}.{{ .Values.namespace.name }}.svc.cluster.local:{{ .Values.prometheus.service.port }}"
      access: proxy
      isDefault: true

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  
  grafana:
    enabled: true
    host: grafana.local
    path: /
    pathType: Prefix
  
  prometheus:
    enabled: true
    host: prometheus.local
    path: /
    pathType: Prefix

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC
rbac:
  create: true