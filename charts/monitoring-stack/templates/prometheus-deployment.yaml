{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "monitoring-stack.prometheus.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "monitoring-stack.prometheus.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "monitoring-stack.prometheus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "monitoring-stack.prometheus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "monitoring-stack.prometheus.fullname" . }}
      containers:
      - name: prometheus
        image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
        imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time={{ .Values.prometheus.storage.retention }}'
          - '--web.enable-lifecycle'
        ports:
        - name: web
          containerPort: {{ .Values.prometheus.service.targetPort }}
          protocol: TCP
        resources:
          {{- toYaml .Values.prometheus.resources | nindent 10 }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/
        - name: storage-volume
          mountPath: /prometheus/
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "monitoring-stack.prometheus.fullname" . }}-config
      {{- if .Values.prometheus.persistence.enabled }}
      - name: storage-volume
        persistentVolumeClaim:
          claimName: {{ include "monitoring-stack.prometheus.fullname" . }}-data
      {{- else }}
      - name: storage-volume
        emptyDir: {}
      {{- end }}
{{- end }}
